#include "inst_parser.fdl"

dp controller(
	in inst                : ns(32);
    in alu_res             : tc(32);	
	in reg_b               : tc(32);
	out jmp                : ns(1);
	out jlt                : ns(1);
	out jgt                : ns(1);
	out alu_op             : ns(1);
	out alu_sel            : ns(2);
	out load               : ns(1);
	out store              : ns(1);
	out rgw_addr           : ns(3);
	out rgw_data           : ns(32);
	out rgw_flag           : ns(1);
	out target             : ns(28);
	out reg_asel, reg_bsel : ns(3)) {

    sig opcode             : ns(4);
    sig set, cmp, mov      : ns(1);
    sig imm_val            : ns(24);
        
	use inst_parser(inst, alu_res, set, cmp, mov, load, alu_op, reg_b,
	        opcode, rgw_addr, rgw_data, rgw_flag, imm_val, target,
	        reg_asel, reg_bsel);

	always {
		jmp     = opcode == 0b1100;
		jlt     = opcode == 0b1101;
		jgt     = opcode == 0b1110;

		load    = opcode == 0b1000;
		store   = opcode == 0b1001;

		set     = opcode == 0b0100;
		cmp     = opcode == 0b0110;
		mov     = opcode == 0b0111;
        
	    // do alu sub for comparisons
		alu_op  = opcode <  0b0100 | cmp;
        //00 = add, 01 = sub, 10 = mul
		alu_sel = cmp ? 0b01 : opcode[0:1];
	}
}
