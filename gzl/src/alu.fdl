dp alu(
  in a        : tc(32);
  in b        : tc(32);
  in select   : ns(2);
  in enable   : ns(1);
  out r       : tc(32);
  out neg     : ns(1);
  out zero    : ns(1)) {

  reg res     : tc(32);

  always {
    r = (select == 0b00 & enable) ? a + b :
        (select == 0b01 & enable) ? a - b :
        (select == 0b10 & enable) ? a * b :
        (select == 0b11 & enable) ? (ns(57)) (a * b) >> 25 : 0;

    res = r;
    neg  = res < 0;
    zero = res == 0;

    //$display("ALU --- a: ", $dec,  a, " b: ", $dec,  b,	" alu_op: ", enable	, " alu_sel: ", select	, " neg: ", neg	, " zero: ", zero	, " res: ", $dec, res);
  }
}

// dp test_alu(out a, b: tc(32);
  //             out select : ns(2);
  //             in r: tc(32);
  //             in neg, zero : ns(1)) {
  //     always{
    //            $display($dec, 
      //                     "cycle:", $cycle,
      //                     " A:", a, 
      //                     " B:", b, 
      //                     " S:", select, 
      //                     " R:", r,
      //                     " Neg:", neg,
      //                     " Zero:", zero);
//     }
//     sfg test_0 { a=1; b=3; select=0b00; }
//     sfg test_1 { a=1; b=1; select=0b01; }
//     sfg test_2 { a=1; b=3; select=0b10; }
//     sfg test_3 { a=1; b=3; select=0b11; }
// }

// fsm f_testbench(test_alu) { 
  //     initial s0;
  //     state s1, s2, s3;    
  //     @s0 (test_0) -> s1;
  //     @s1 (test_1) -> s2;
  //     @s2 (test_2) -> s3;
  //     @s3 (test_3) -> s0;
  // }

  // system alu_sys {
    //     alu(a, b, s, r, neg, zero);
    //     test_alu(a, b, s, r, neg, zero);
    // }
