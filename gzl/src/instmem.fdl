ipblock instmem(in address : ns(5);
                in wr, rd  : ns(1);
                in idata   : ns(32);
                out odata  : ns(32)) {
    iptype "ram";	
	ipparm "size=64";
    ipparm "wl=32";	
	ipparm "file=program.txt";
}

dp instreader {
	reg a  : ns(3);
	reg di : ns(32);
	sig do : ns(32);
	sig wr, rd : ns(1);
	use instmem(a, wr, rd, di, do);
    
	always {
		$display($cycle, " a ", a,
				 " di ", di, " do ", do,
				 " wr ", wr, " rd ", rd);
		a = a + 1;
	}

	sfg write { wr=1; rd=0; di=di + 1; }
	sfg read { wr=0; rd=1; }
}

fsm c_instreader(instreader) {
	initial s0;
	state s1;

	@s0 (read) -> s0;//if (a == 1) then (read)  -> s1;
	   // else (write) -> s0;
	@s1 (write)	-> s1;// if (a == 2) then (write) -> s0 
	    //else (read)  -> s1;
}

system S {
	instreader;
}
