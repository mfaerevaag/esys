#include "mwi.fdl"
#include "coreg.fdl"

dp copro(
    in cmd         : ns(32);
    in datain      : ns(32);
    in datainrdy   : ns(1);

    out dataout    : ns(32);
    out dataoutrdy : ns(1);
	in stall : ns(1) // true if the slave is currently busy (with handshaking) and cannot receive new data.
) {

	//sig data              : ns(28);
	sig old, curr, result : ns(28);

	reg datainrdyr : ns(1);
	reg datar : ns(32);
	reg dataoutr : ns(32);
	reg stallr : ns(1);

    use coreg(datar, dataoutrdy,
			  old, curr);

    use mwi(old, curr, dataoutrdy,
            result);

	always {
		stallr = stall;
		dataout = result;
	}

	sfg captureData {
		dataoutrdy = 0;
		datainrdyr = datainrdy;
		datar = cmd[0:27];
	}

	sfg awaithandshake {
		dataoutrdy = 0;
	}

	sfg resetAndSignalRdy {
		dataoutrdy = 1;
		datainrdyr = 0;
	}

	sfg nothing {
		dataoutrdy = 0;
	}
}

fsm copro_cntrl (copro) {
	initial s0;
	state s1;

	@s0 if (datainrdyr == 1 & stallr == 0) then (resetAndSignalRdy) -> s0;
	    else if (datainrdyr == 1 & stallr == 1) then (nothing) -> s1;
	    else (captureData) -> s0;
	@s1 if (stallr == 0) then (resetAndSignalRdy) -> s0;
	    else (awaithandshake) -> s1;

}
